# Initialize vectors to store results
col_index_uplift <- numeric(nrow(output_all_services))
row_index_uplift <- numeric(nrow(output_all_services))
# Iterate over each row
for (i in 1:nrow(output_all_services)) {
if (output_all_services$DESCRIPTION[i] %in% c("Parcel Post with Signature", "Express Post with Signature")) {
# For rows with specified DESCRIPTIONs, find column and row indices
col_name_uplift <- as.character(output_all_services$uplift_service[i])
col_index_uplift[i] <- which(colnames(customer_uplift_march_24) == col_name_uplift)
row_name_uplift <- as.character(output_all_services$customer_code[i])
row_index <- which(rownames(customer_uplift_march_24) == row_name_uplift)
# Check if the row index exists, otherwise assign NA
if (length(row_index) == 0) {
row_index_uplift[i] <- NA
} else {
row_index_uplift[i] <- row_index
}
} else {
# For other rows, assign NA to indices
col_index_uplift[i] <- NA
row_index_uplift[i] <- NA
}
}
############
output_all_services_2 <-cbind(output_all_services, (cbind(row_index_uplift, col_index_uplift)))
write.csv(output_all_services_2, file = "output_all_services_2.csv")
# query uplift sheet to find uplift % ####
# Function to extract values from charge zone dataset based on indices
#extract_charge_value_uplift<- function(row_index_uplift, col_index_uplift) {
#  charge_value <- customer_uplift_march_24[row_index_uplift, col_index_uplift]
# return(charge_value)
#}
###########################
extract_charge_value_uplift <- function(row_index_uplift, col_index_uplift) {
if (is.na(row_index_uplift) || is.na(col_index_uplift)) {
return(0)
} else {
charge_value <- customer_uplift_march_24[row_index_uplift, col_index_uplift]
return(charge_value)
}
}
#################################
output_all_services_2$charge_value_uplift <- mapply(extract_charge_value_uplift, output_all_services_2$row_index_uplift, output_all_services_2$col_index_uplift)
#write.csv(output_all_services_2, file = "output_all_services_2.csv")
#### multiply base by uplift ####
# Incgst Convert charge_value_uplift to numeric, handling NA values
output_all_services_2$charge_value_uplift_numeric_incgst <- ifelse(is.na(output_all_services_2$charge_value_uplift) | is.na(output_all_services_2$base_charge_exgst),
NA,
as.numeric(sub("%", "", output_all_services_2$charge_value_uplift)))
#exgst
output_all_services_2$charge_value_uplift_numeric_exgst <- ifelse(is.na(output_all_services_2$charge_value_uplift) | is.na(output_all_services_2$base_charge_exgst),
NA,
as.numeric(sub("%", "", output_all_services_2$charge_value_uplift)))
# Incgst Convert base_charge_exgst to numeric, handling NA values
#output_all_services_2$charge_value_max_incgst_numeric <- ifelse(is.na(output_all_services_2$charge_value_uplift) | is.na(output_all_services_2$base_charge_exgst),
#                                              NA,
#                                              as.numeric(gsub("[^0-9.]", "", output_all_services_2$base_charge_exgst)))
#exgst
output_all_services_2$charge_value_max_exgst_numeric <- ifelse(is.na(output_all_services_2$charge_value_uplift) | is.na(output_all_services_2$base_charge_exgst),
NA,
as.numeric(gsub("[^0-9.]", "", output_all_services_2$base_charge_exgst)))
# Incgst Calculate the percentage of base_charge_exgst, handling NA values
#output_all_services_2$uplift_figure_incgst <- ifelse(is.na(output_all_services_2$charge_value_uplift_numeric_incgst) | is.na(output_all_services_2$charge_value_max_incgst_numeric),
#                                   NA,
#                                   (output_all_services_2$charge_value_uplift_numeric_incgst / 100) * output_all_services_2$charge_value_max_incgst_numeric)
#exgst
output_all_services_2$uplift_figure_exgst <- ifelse(is.na(output_all_services_2$charge_value_uplift_numeric_exgst) | is.na(output_all_services_2$charge_value_max_exgst_numeric),
NA,
(output_all_services_2$charge_value_uplift_numeric_exgst / 100) * output_all_services_2$charge_value_max_exgst_numeric)
#  Incgst Filter out NA and non-numeric values before performing addition
#output_all_services_2$charge_to_custo_incgst <- ifelse(is.na(output_all_services_2$charge_value_max_incgst_numeric) | is.na(output_all_services_2$uplift_figure_incgst) | !is.numeric(output_all_services_2$charge_value_max_incgst_numeric) | !is.numeric(output_all_services_2$uplift_figure_incgst),
#                                     NA,
#                                    output_all_services_2$charge_value_max_incgst_numeric + output_all_services_2$uplift_figure_incgst)
#exgst
output_all_services_2$charge_to_custo_exgst <- ifelse(is.na(output_all_services_2$charge_value_max_exgst_numeric) | is.na(output_all_services_2$uplift_figure_exgs) | !is.numeric(output_all_services_2$charge_value_max_exgst_numeric) | !is.numeric(output_all_services_2$uplift_figure_exgs),
NA,
output_all_services_2$charge_value_max_exgst_numeric + output_all_services_2$uplift_figure_exgs)
# update table name
output_all_services_2 <- output_all_services_2
##### write to CSV ####
write.csv(output_all_services_2, file = "output_all_services_2.csv")
#the above is redundent
#Take what we want from the DF and put it into the input file
# Rename column in bill data frame
names(bill)[names(bill) == "ARTICLE.ID"] <- "article_id"
# Rename column in output_all_services_2 data frame
names(output_all_services_2)[names(output_all_services_2) == "ARTICLE.ID"] <- "article_id"
# Specify columns to merge from output_all_services_2
merge_cols <- c("uplift_service", "DESCRIPTION", "BILLING.DOC", "article_id", "base_charge_incgst", "base_charge_exgst", "charge_value_uplift", "uplift_figure_exgst", "charge_to_custo_exgst", "cubic_weight", "max_weight", "fuel_surcharge", "fuel_gst", "sec_mng_chrg", "sec_mng_gst", "over_max_limits_fee")
# Merge bill and selected columns from output_all_services_2 by "article_id"
final_output <- merge(bill, output_all_services_2[, merge_cols], by = c("article_id", "BILLING.DOC" , "DESCRIPTION"), all = TRUE)
# Find the position of "AVG..UNIT.PRICE" column
avg_unit_price_index <- which(names(final_output) == "AMOUNT.INCL.TAX")
# Insert new columns after "AVG..UNIT.PRICE"
final_output <- cbind(final_output[, 1:avg_unit_price_index],
final_output[, c("base_charge_incgst","base_charge_exgst", "charge_value_uplift", "uplift_figure_exgst", "charge_to_custo_exgst")],
final_output[, (avg_unit_price_index + 1):ncol(final_output)])
# Find the position of "AVG..UNIT.PRICE" column
fuel_gst_index <- which(names(final_output) == "FUEL.GST")
# Insert new columns after "AVG..UNIT.PRICE"
final_output <- cbind(final_output[, 1:fuel_gst_index  ],
final_output[, c("fuel_surcharge" ,"fuel_gst", "sec_mng_chrg", "over_max_limits_fee")],
final_output[, (fuel_gst_index  + 1):ncol(final_output)])
# Find the position of "AVG..UNIT.PRICE" column
billed_weight_index <- which(names(final_output) == "BILLED.WEIGHT")
# Insert new columns after "AVG..UNIT.PRICE"
final_output <- cbind(final_output[, 1:billed_weight_index  ],
final_output[, c("cubic_weight", "max_weight")],
final_output[, (billed_weight_index  + 1):ncol(final_output)])
# Write final_output to a CSV file
write.csv(final_output, file = "final_output.csv")
# Write final_output to a CSV file
write.csv(final_output, file = "final_output.csv")
head(final_output)
final_output_b <- final_output
#final_output_b  <- subset(final_output_b , NAME_1 %in% c('JOS - Journey of Something - LAV'))
# declare a data.frame
invoice_test <- data.frame(
Name = c("Bill total from Aus Post"),
value = c(1)
)
#### original from Aus Post using the easy calcs
#total_supply_for_the_period_inc_fee_and_charges_easy
invoice_test$total_supply_for_the_period_inc_fee_and_charges_easy <- sum(final_output_b$AMOUNT.EXCL.TAX, na.rm = TRUE)
#total_supply_for_the_period_easy
final_output_minus_fees_and_charge_easy <- final_output_b[!grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output_b$DESCRIPTION, ignore.case = TRUE), ]
invoice_test$total_supply_for_the_period_easy <-sum(final_output_minus_fees_and_charge_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
#fees_and_charges_for_the_period_easy
final_output_just_fees_and_charges_easy <- final_output_b[grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output_b$DESCRIPTION, ignore.case = TRUE), ]
invoice_test$fees_and_charges_for_the_period_easy <-sum(final_output_just_fees_and_charges_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
invoice_test$gst <-sum(final_output_b$TAX.AMOUNT, na.rm = TRUE)
#### original from Aus Post using the hard calcs
#fees_and_charges_for_the_period_hard
total_FUEL.SURCHARGE.. <- sum(final_output_b$FUEL.SURCHARGE.., na.rm = TRUE)
total_SMC.FEE  <- sum(final_output_b$SMC.FEE, na.rm = TRUE)
total_SMC.GST <- sum(final_output_b$SMC.FEE, na.rm = TRUE)
total_FUEL.GST <- sum(final_output_b$FUEL.GST, na.rm = TRUE)
invoice_test$fees_and_charges_for_the_period_hard <- sum(total_FUEL.SURCHARGE.., total_SMC.FEE)
#total_supply_for_the_period_har
invoice_test$total_supply_for_the_period_hard <- sum(invoice_test$total_supply_for_the_period_inc_fee_and_charges_easy
- invoice_test$fees_and_charges_for_the_period_hard)
#invoice_test$gst_hard <-sum(total_SMC.GST, total_FUEL.GST, total_TAX.AMOUNT)
write.csv(invoice_test, file = "invoice_test.csv")
##### basic charges only
# original from Aus Post using the easy calcs
# declare a data.frame
invoice_test_basic_charge <- data.frame(
Name = c("Standard and express"),
value = c(1)
)
final_output2 <- subset(final_output_b, uplift_service %in% c( "Regular.VIC", "Express.VIC", "Regular.NSW", "Express.NSW", "EPP_fivekg", "ep_return_to_sender", "exp_eparcel_returns",
"reg_eparcel_returns", "reg_ep_call_for_return"))
#total_supply_for_the_period_inc_fee_and_charges_easy
invoice_test_basic_charge$total_supply_for_the_period_ex_fee_and_charges_easy <-sum(final_output2$AMOUNT.EXCL.TAX, na.rm = TRUE)
#total_supply_for_the_period_easy
final_output_minus_fees_and_charge_easy <- final_output2[!grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output2$DESCRIPTION, ignore.case = TRUE), ]
invoice_test_basic_charge$total_supply_for_the_period_easy <-sum(final_output_minus_fees_and_charge_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
#fees_and_charges_for_the_period_easy
final_output_just_fees_and_charges_easy <- final_output2[grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output2$DESCRIPTION, ignore.case = TRUE), ]
invoice_test_basic_charge$fees_and_charges_for_the_period_easy <-sum(final_output_just_fees_and_charges_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
invoice_test_basic_charge$gst <-sum(final_output2$TAX.AMOUNT, na.rm = TRUE)
#### original from Aus Post using the hard calcs
#fees_and_charges_for_the_period_hard
total_FUEL.SURCHARGE..2 <- sum(final_output2$FUEL.SURCHARGE.., na.rm = TRUE)
total_SMC.FEE2  <- sum(final_output2$SMC.FEE, na.rm = TRUE)
total_SMC.GST2 <- sum(final_output2$SMC.FEE, na.rm = TRUE)
total_FUEL.GST2 <- sum(final_output2$FUEL.GST, na.rm = TRUE)
invoice_test_basic_charge$fees_and_charges_for_the_period_hard <- sum(total_FUEL.SURCHARGE..2, total_SMC.FEE2)
#total_supply_for_the_period_hard
#invoice_test_basic_charge$total_supply_for_the_period_hard <- sum(invoice_test_basic_charge$total_supply_for_the_period_ex_fee_and_charges_easy)
#invoice_test_basic_charge$gst_hard <-sum(total_SMC.GST, total_FUEL.GST, total_TAX.AMOUNT)
write.csv(invoice_test_basic_charge, file = "invoice_test_basic_charge.csv")
##### post feb rates
invoice_test_post_feb <- data.frame(
Name = c("Post feb rates base"),
value = c(1)
)
invoice_test_post_feb$new_base_charge_exgst <- sum(final_output_b$base_charge_exgst, na.rm = TRUE)
invoice_test_post_feb$new_charge_to_custo_exgst <- sum(final_output_b$charge_to_custo_exgst, na.rm = TRUE)
invoice_test_post_feb$fuel_surcharge <- sum(final_output_b$fuel_surcharge, na.rm = TRUE)
# fees and surcharges
invoice_test_post_feb$new_fees_and_surcharges <- sum(final_output$fuel_surcharge,na.rm = TRUE)+ sum(final_output$sec_mng_chrg,na.rm = TRUE)+ sum(final_output$over_max_limits_fee, na.rm = TRUE)
write.csv(invoice_test_post_feb, file = "invoice_test_post_feb.csv")
#average uplift
final_output$charge_value_uplift <- as.numeric(gsub("%", "", final_output$charge_value_uplift))
invoice_test_post_feb$average_uplift <- mean(final_output$charge_value_uplift, na.rm = TRUE)
final_output$uplift_figure_exgst <- as.numeric(gsub("%", "", final_output$uplift_figure_exgst))
invoice_test_post_feb$average_uplift_figure_exgst <- mean(final_output$uplift_figure_exgst, na.rm = TRUE)
View(invoice_test_basic_charge)
final_output_b <- final_output
final_output_b  <- subset(final_output_b , NAME_1 %in% c('JOS - Journey of Something - LAV'))
# declare a data.frame
invoice_test <- data.frame(
Name = c("Bill total from Aus Post"),
value = c(1)
)
#### original from Aus Post using the easy calcs
#total_supply_for_the_period_inc_fee_and_charges_easy
invoice_test$total_supply_for_the_period_inc_fee_and_charges_easy <- sum(final_output_b$AMOUNT.EXCL.TAX, na.rm = TRUE)
#total_supply_for_the_period_easy
final_output_minus_fees_and_charge_easy <- final_output_b[!grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output_b$DESCRIPTION, ignore.case = TRUE), ]
invoice_test$total_supply_for_the_period_easy <-sum(final_output_minus_fees_and_charge_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
#fees_and_charges_for_the_period_easy
final_output_just_fees_and_charges_easy <- final_output_b[grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output_b$DESCRIPTION, ignore.case = TRUE), ]
invoice_test$fees_and_charges_for_the_period_easy <-sum(final_output_just_fees_and_charges_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
invoice_test$gst <-sum(final_output_b$TAX.AMOUNT, na.rm = TRUE)
#### original from Aus Post using the hard calcs
#fees_and_charges_for_the_period_hard
total_FUEL.SURCHARGE.. <- sum(final_output_b$FUEL.SURCHARGE.., na.rm = TRUE)
total_SMC.FEE  <- sum(final_output_b$SMC.FEE, na.rm = TRUE)
total_SMC.GST <- sum(final_output_b$SMC.GST, na.rm = TRUE)
total_FUEL.GST <- sum(final_output_b$FUEL.GST, na.rm = TRUE)
invoice_test$fees_and_charges_for_the_period_hard <- sum(total_FUEL.SURCHARGE.., total_SMC.FEE)
#total_supply_for_the_period_har
invoice_test$total_supply_for_the_period_hard <- sum(invoice_test$total_supply_for_the_period_inc_fee_and_charges_easy
- invoice_test$fees_and_charges_for_the_period_hard)
#invoice_test$gst_hard <-sum(total_SMC.GST, total_FUEL.GST, total_TAX.AMOUNT)
write.csv(invoice_test, file = "invoice_test.csv")
##### basic charges only
# original from Aus Post using the easy calcs
# declare a data.frame
invoice_test_basic_charge <- data.frame(
Name = c("Standard and express"),
value = c(1)
)
final_output2 <- subset(final_output_b, uplift_service %in% c( "Regular.VIC", "Express.VIC", "Regular.NSW", "Express.NSW", "EPP_fivekg", "ep_return_to_sender", "exp_eparcel_returns",
"reg_eparcel_returns", "reg_ep_call_for_return"))
#total_supply_for_the_period_inc_fee_and_charges_easy
invoice_test_basic_charge$total_supply_for_the_period_ex_fee_and_charges_easy <-sum(final_output2$AMOUNT.EXCL.TAX, na.rm = TRUE)
#total_supply_for_the_period_easy
final_output_minus_fees_and_charge_easy <- final_output2[!grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output2$DESCRIPTION, ignore.case = TRUE), ]
invoice_test_basic_charge$total_supply_for_the_period_easy <-sum(final_output_minus_fees_and_charge_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
#fees_and_charges_for_the_period_easy
final_output_just_fees_and_charges_easy <- final_output2[grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output2$DESCRIPTION, ignore.case = TRUE), ]
invoice_test_basic_charge$fees_and_charges_for_the_period_easy <-sum(final_output_just_fees_and_charges_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
invoice_test_basic_charge$gst <-sum(final_output2$TAX.AMOUNT, na.rm = TRUE)
#### original from Aus Post using the hard calcs
#fees_and_charges_for_the_period_hard
total_FUEL.SURCHARGE..2 <- sum(final_output2$FUEL.SURCHARGE.., na.rm = TRUE)
total_SMC.FEE2  <- sum(final_output2$SMC.FEE, na.rm = TRUE)
total_SMC.GST2 <- sum(final_output2$SMC.GST, na.rm = TRUE)
total_FUEL.GST2 <- sum(final_output2$FUEL.GST, na.rm = TRUE)
invoice_test_basic_charge$fees_and_charges_for_the_period_hard <- sum(total_FUEL.SURCHARGE..2, total_SMC.FEE2)
#total_supply_for_the_period_hard
#invoice_test_basic_charge$total_supply_for_the_period_hard <- sum(invoice_test_basic_charge$total_supply_for_the_period_ex_fee_and_charges_easy)
#invoice_test_basic_charge$gst_hard <-sum(total_SMC.GST, total_FUEL.GST, total_TAX.AMOUNT)
write.csv(invoice_test_basic_charge, file = "invoice_test_basic_charge.csv")
final_output_b <- final_output
final_output_b  <- subset(final_output_b , NAME_1 %in% c(''AGN - Ambition Group NZ - MW1''))
final_output_b <- final_output
final_output_b  <- subset(final_output_b , NAME_1 %in% c('AGN - Ambition Group NZ - MW1'))
# declare a data.frame
invoice_test <- data.frame(
Name = c("Bill total from Aus Post"),
value = c(1)
)
#### original from Aus Post using the easy calcs
#total_supply_for_the_period_inc_fee_and_charges_easy
invoice_test$total_supply_for_the_period_inc_fee_and_charges_easy <- sum(final_output_b$AMOUNT.EXCL.TAX, na.rm = TRUE)
#total_supply_for_the_period_easy
final_output_minus_fees_and_charge_easy <- final_output_b[!grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output_b$DESCRIPTION, ignore.case = TRUE), ]
invoice_test$total_supply_for_the_period_easy <-sum(final_output_minus_fees_and_charge_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
#fees_and_charges_for_the_period_easy
final_output_just_fees_and_charges_easy <- final_output_b[grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output_b$DESCRIPTION, ignore.case = TRUE), ]
invoice_test$fees_and_charges_for_the_period_easy <-sum(final_output_just_fees_and_charges_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
invoice_test$gst <-sum(final_output_b$TAX.AMOUNT, na.rm = TRUE)
#### original from Aus Post using the hard calcs
#fees_and_charges_for_the_period_hard
total_FUEL.SURCHARGE.. <- sum(final_output_b$FUEL.SURCHARGE.., na.rm = TRUE)
total_SMC.FEE  <- sum(final_output_b$SMC.FEE, na.rm = TRUE)
total_SMC.GST <- sum(final_output_b$SMC.GST, na.rm = TRUE)
total_FUEL.GST <- sum(final_output_b$FUEL.GST, na.rm = TRUE)
invoice_test$fees_and_charges_for_the_period_hard <- sum(total_FUEL.SURCHARGE.., total_SMC.FEE)
#total_supply_for_the_period_har
invoice_test$total_supply_for_the_period_hard <- sum(invoice_test$total_supply_for_the_period_inc_fee_and_charges_easy
- invoice_test$fees_and_charges_for_the_period_hard)
#invoice_test$gst_hard <-sum(total_SMC.GST, total_FUEL.GST, total_TAX.AMOUNT)
write.csv(invoice_test, file = "invoice_test.csv")
##### basic charges only
# original from Aus Post using the easy calcs
# declare a data.frame
invoice_test_basic_charge <- data.frame(
Name = c("Standard and express"),
value = c(1)
)
final_output2 <- subset(final_output_b, uplift_service %in% c( "Regular.VIC", "Express.VIC", "Regular.NSW", "Express.NSW", "EPP_fivekg", "ep_return_to_sender", "exp_eparcel_returns",
"reg_eparcel_returns", "reg_ep_call_for_return"))
#total_supply_for_the_period_inc_fee_and_charges_easy
invoice_test_basic_charge$total_supply_for_the_period_ex_fee_and_charges_easy <-sum(final_output2$AMOUNT.EXCL.TAX, na.rm = TRUE)
#total_supply_for_the_period_easy
final_output_minus_fees_and_charge_easy <- final_output2[!grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output2$DESCRIPTION, ignore.case = TRUE), ]
invoice_test_basic_charge$total_supply_for_the_period_easy <-sum(final_output_minus_fees_and_charge_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
#fees_and_charges_for_the_period_easy
final_output_just_fees_and_charges_easy <- final_output2[grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output2$DESCRIPTION, ignore.case = TRUE), ]
invoice_test_basic_charge$fees_and_charges_for_the_period_easy <-sum(final_output_just_fees_and_charges_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
invoice_test_basic_charge$gst <-sum(final_output2$TAX.AMOUNT, na.rm = TRUE)
#### original from Aus Post using the hard calcs
#fees_and_charges_for_the_period_hard
total_FUEL.SURCHARGE..2 <- sum(final_output2$FUEL.SURCHARGE.., na.rm = TRUE)
total_SMC.FEE2  <- sum(final_output2$SMC.FEE, na.rm = TRUE)
total_SMC.GST2 <- sum(final_output2$SMC.GST, na.rm = TRUE)
total_FUEL.GST2 <- sum(final_output2$FUEL.GST, na.rm = TRUE)
invoice_test_basic_charge$fees_and_charges_for_the_period_hard <- sum(total_FUEL.SURCHARGE..2, total_SMC.FEE2)
#total_supply_for_the_period_hard
#invoice_test_basic_charge$total_supply_for_the_period_hard <- sum(invoice_test_basic_charge$total_supply_for_the_period_ex_fee_and_charges_easy)
#invoice_test_basic_charge$gst_hard <-sum(total_SMC.GST, total_FUEL.GST, total_TAX.AMOUNT)
write.csv(invoice_test_basic_charge, file = "invoice_test_basic_charge.csv")
# declare a data.frame
invoice_test <- data.frame(
Name = c("Bill total from Aus Post"),
value = c(1)
)
#### original from Aus Post using the easy calcs
#total_supply_for_the_period_inc_fee_and_charges_easy
invoice_test$total_supply_for_the_period_inc_fee_and_charges_easy <- sum(final_output_b$AMOUNT.EXCL.TAX, na.rm = TRUE)
#total_supply_for_the_period_easy
final_output_minus_fees_and_charge_easy <- final_output_b[!grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output_b$DESCRIPTION, ignore.case = TRUE), ]
invoice_test$total_supply_for_the_period_easy <-sum(final_output_minus_fees_and_charge_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
#fees_and_charges_for_the_period_easy
final_output_just_fees_and_charges_easy <- final_output_b[grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output_b$DESCRIPTION, ignore.case = TRUE), ]
invoice_test$fees_and_charges_for_the_period_easy <-sum(final_output_just_fees_and_charges_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
invoice_test$gst <-sum(final_output_b$TAX.AMOUNT, na.rm = TRUE)
#### original from Aus Post using the hard calcs
#fees_and_charges_for_the_period_hard
total_FUEL.SURCHARGE.. <- sum(final_output_b$FUEL.SURCHARGE.., na.rm = TRUE)
total_SMC.FEE  <- sum(final_output_b$SMC.FEE, na.rm = TRUE)
total_SMC.GST <- sum(final_output_b$SMC.GST, na.rm = TRUE)
total_FUEL.GST <- sum(final_output_b$FUEL.GST, na.rm = TRUE)
invoice_test$fees_and_charges_for_the_period_hard <- sum(total_FUEL.SURCHARGE.., total_SMC.FEE)
#total_supply_for_the_period_har
invoice_test$total_supply_for_the_period_hard <- sum(invoice_test$total_supply_for_the_period_inc_fee_and_charges_easy
- invoice_test$fees_and_charges_for_the_period_hard)
#invoice_test$gst_hard <-sum(total_SMC.GST, total_FUEL.GST, total_TAX.AMOUNT)
write.csv(invoice_test, file = "invoice_test.csv")
##### basic charges only
# original from Aus Post using the easy calcs
# declare a data.frame
invoice_test_basic_charge <- data.frame(
Name = c("Standard and express"),
value = c(1)
)
final_output2 <- subset(final_output_b, uplift_service %in% c( "Regular.VIC", "Express.VIC", "Regular.NSW", "Express.NSW", "EPP_fivekg", "ep_return_to_sender", "exp_eparcel_returns",
"reg_eparcel_returns", "reg_ep_call_for_return"))
#total_supply_for_the_period_inc_fee_and_charges_easy
invoice_test_basic_charge$total_supply_for_the_period_ex_fee_and_charges_easy <-sum(final_output2$AMOUNT.EXCL.TAX, na.rm = TRUE)
#total_supply_for_the_period_easy
final_output_minus_fees_and_charge_easy <- final_output2[!grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output2$DESCRIPTION, ignore.case = TRUE), ]
invoice_test_basic_charge$total_supply_for_the_period_easy <-sum(final_output_minus_fees_and_charge_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
#fees_and_charges_for_the_period_easy
final_output_just_fees_and_charges_easy <- final_output2[grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output2$DESCRIPTION, ignore.case = TRUE), ]
invoice_test_basic_charge$fees_and_charges_for_the_period_easy <-sum(final_output_just_fees_and_charges_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
invoice_test_basic_charge$gst <-sum(final_output2$TAX.AMOUNT, na.rm = TRUE)
#### original from Aus Post using the hard calcs
#fees_and_charges_for_the_period_hard
total_FUEL.SURCHARGE..2 <- sum(final_output2$FUEL.SURCHARGE.., na.rm = TRUE)
total_SMC.FEE2  <- sum(final_output2$SMC.FEE, na.rm = TRUE)
total_SMC.GST2 <- sum(final_output2$SMC.GST, na.rm = TRUE)
total_FUEL.GST2 <- sum(final_output2$FUEL.GST, na.rm = TRUE)
invoice_test_basic_charge$fees_and_charges_for_the_period_hard <- sum(total_FUEL.SURCHARGE..2, total_SMC.FEE2)
#total_supply_for_the_period_hard
#invoice_test_basic_charge$total_supply_for_the_period_hard <- sum(invoice_test_basic_charge$total_supply_for_the_period_ex_fee_and_charges_easy)
#invoice_test_basic_charge$gst_hard <-sum(total_SMC.GST, total_FUEL.GST, total_TAX.AMOUNT)
write.csv(invoice_test_basic_charge, file = "invoice_test_basic_charge.csv")
##### post feb rates
invoice_test_post_feb <- data.frame(
Name = c("Post feb rates base"),
value = c(1)
)
invoice_test_post_feb$new_base_charge_exgst <- sum(final_output_b$base_charge_exgst, na.rm = TRUE)
invoice_test_post_feb$new_charge_to_custo_exgst <- sum(final_output_b$charge_to_custo_exgst, na.rm = TRUE)
invoice_test_post_feb$fuel_surcharge <- sum(final_output_b$fuel_surcharge, na.rm = TRUE)
# fees and surcharges
invoice_test_post_feb$new_fees_and_surcharges <- sum(final_output$fuel_surcharge,na.rm = TRUE)+ sum(final_output$sec_mng_chrg,na.rm = TRUE)+ sum(final_output$over_max_limits_fee, na.rm = TRUE)
write.csv(invoice_test_post_feb, file = "invoice_test_post_feb.csv")
#average uplift
final_output$charge_value_uplift <- as.numeric(gsub("%", "", final_output$charge_value_uplift))
invoice_test_post_feb$average_uplift <- mean(final_output$charge_value_uplift, na.rm = TRUE)
final_output$uplift_figure_exgst <- as.numeric(gsub("%", "", final_output$uplift_figure_exgst))
invoice_test_post_feb$average_uplift_figure_exgst <- mean(final_output$uplift_figure_exgst, na.rm = TRUE)
########################################################################
#### Checking the tool against the charges on the invoice ####
# Get final output minus fees and charges method1
#invoice_test$total_fees_and_charges <-sum(final_output$AMOUNT.EXCL.TAX) - sum(final_output_minus_fees_and_charges$AMOUNT.EXCL.TAX)
#### GST rough work ###
#final_output$SMC.GST, final_output$FUEL.GST, final_output$MHS.GST
#sum(final_output$SMC.GST)
#sum(final_output$SMC.FEE)
#### getting the figures from the NEW method ####
# gst: fuel_gst,  sec_mng_gst,
sum(final_output$fuel_surcharge, na.rm = TRUE)
sum(final_output$sec_mng_chrg, na.rm = TRUE)
sum(final_output$over_max_limits_fee , na.rm = TRUE)
#### grouping rough work. TBC
#base charge by nam_1 custo
# Convert base_charge_exgst to numeric, replacing NA with 0
#final_output$base_charge_exgst <- as.numeric(replace_na(final_output$base_charge_exgst, 0))
#base_charge_totals <- aggregate(base_charge_exgst ~ NAME_1, data = final_output, FUN = sum)
#print(base_charge_totals)
#final_output$AVG..UNIT.PRICE <- as.numeric(replace_na(final_output$AVG..UNIT.PRICE, 0))
#AVG..UNIT.PRICE_totals <- aggregate(AVG..UNIT.PRICE ~ NAME_1, data = final_output, FUN = sum)
#diff <- ifelse(final_output$AMOUNT.INCL.TAX != final_output$base_charge_incgst, "yes", "no")
#count_diff <- table(diff)
#print(count_diff)
invoice_test$gst_hard <- sum(final_output_minus_fees_and_charge_easy$total_SMC.GST + final_output_minus_fees_and_charge_easy$total_FUEL.GST
+ final_output_minus_fees_and_charge_easy$total_TAX.AMOUNT)
View(invoice_test)
SUM(final_output_minus_fees_and_charge_easy$total_SMC.GST)
sum(final_output_minus_fees_and_charge_easy$total_SMC.GST)
sum(final_output_minus_fees_and_charge_easy$SMC.GST)
#fees_and_charges_for_the_period_easy
final_output_just_fees_and_charges_easy <- final_output_b[grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output_b$DESCRIPTION, ignore.case = TRUE), ]
sum(final_output_minus_fees_and_charge_easy$SMC.GST)
sum(final_output_minus_fees_and_charge_easy$FUEL.GST)
sum(final_output_minus_fees_and_charge_easy$TAX.AMOUNT)
invoice_test$gst_hard <- sum(final_output_minus_fees_and_charge_easy$SMC.GST + final_output_minus_fees_and_charge_easy$FUEL.GST
+ final_output_minus_fees_and_charge_easy$TAX.AMOUNT)
View(invoice_test)
# declare a data.frame
invoice_test_basic_charge <- data.frame(
Name = c("Standard and express"),
value = c(1)
)
final_output2 <- subset(final_output_b, uplift_service %in% c( "Regular.VIC", "Express.VIC", "Regular.NSW", "Express.NSW", "EPP_fivekg", "ep_return_to_sender", "exp_eparcel_returns",
"reg_eparcel_returns", "reg_ep_call_for_return"))
#total_supply_for_the_period_inc_fee_and_charges_easy
invoice_test_basic_charge$total_supply_for_the_period_ex_fee_and_charges_easy <-sum(final_output2$AMOUNT.EXCL.TAX, na.rm = TRUE)
#total_supply_for_the_period_easy
final_output_minus_fees_and_charge_easy <- final_output2[!grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output2$DESCRIPTION, ignore.case = TRUE), ]
invoice_test_basic_charge$total_supply_for_the_period_easy <-sum(final_output_minus_fees_and_charge_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
#fees_and_charges_for_the_period_easy
final_output_just_fees_and_charges_easy <- final_output2[grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output2$DESCRIPTION, ignore.case = TRUE), ]
invoice_test_basic_charge$fees_and_charges_for_the_period_easy <-sum(final_output_just_fees_and_charges_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
invoice_test_basic_charge$gst <-sum(final_output2$TAX.AMOUNT, na.rm = TRUE)
#### original from Aus Post using the hard calcs
#fees_and_charges_for_the_period_hard
total_FUEL.SURCHARGE..2 <- sum(final_output2$FUEL.SURCHARGE.., na.rm = TRUE)
total_SMC.FEE2  <- sum(final_output2$SMC.FEE, na.rm = TRUE)
total_SMC.GST2 <- sum(final_output2$SMC.GST, na.rm = TRUE)
total_FUEL.GST2 <- sum(final_output2$FUEL.GST, na.rm = TRUE)
invoice_test_basic_charge$fees_and_charges_for_the_period_hard <- sum(total_FUEL.SURCHARGE..2, total_SMC.FEE2)
#total_supply_for_the_period_hard
#invoice_test_basic_charge$total_supply_for_the_period_hard <- sum(invoice_test_basic_charge$total_supply_for_the_period_ex_fee_and_charges_easy)
#invoice_test_basic_charge$gst_hard <-sum(total_SMC.GST, total_FUEL.GST, total_TAX.AMOUNT)
invoice_test$gst_hard <- sum(final_output_minus_fees_and_charge_easy$SMC.GST + final_output_minus_fees_and_charge_easy$FUEL.GST
+ final_output_minus_fees_and_charge_easy$TAX.AMOUNT)
write.csv(invoice_test_basic_charge, file = "invoice_test_basic_charge.csv")
write.csv(invoice_test_basic_charge, file = "invoice_test_basic_charge.csv")
head(final_output)
final_output_b <- final_output
final_output_b  <- subset(final_output_b , NAME_1 %in% c('AGN - Ambition Group NZ - MW1'))
# declare a data.frame
invoice_test <- data.frame(
Name = c("Bill total from Aus Post"),
value = c(1)
)
#### original from Aus Post using the easy calcs
#total_supply_for_the_period_inc_fee_and_charges_easy
invoice_test$total_supply_for_the_period_inc_fee_and_charges_easy <- sum(final_output_b$AMOUNT.EXCL.TAX, na.rm = TRUE)
#total_supply_for_the_period_easy
final_output_minus_fees_and_charge_easy <- final_output_b[!grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output_b$DESCRIPTION, ignore.case = TRUE), ]
invoice_test$total_supply_for_the_period_easy <-sum(final_output_minus_fees_and_charge_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
#fees_and_charges_for_the_period_easy
final_output_just_fees_and_charges_easy <- final_output_b[grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output_b$DESCRIPTION, ignore.case = TRUE), ]
invoice_test$fees_and_charges_for_the_period_easy <-sum(final_output_just_fees_and_charges_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
invoice_test$gst <-sum(final_output_b$TAX.AMOUNT, na.rm = TRUE)
#### original from Aus Post using the hard calcs
#fees_and_charges_for_the_period_hard
total_FUEL.SURCHARGE.. <- sum(final_output_b$FUEL.SURCHARGE.., na.rm = TRUE)
total_SMC.FEE  <- sum(final_output_b$SMC.FEE, na.rm = TRUE)
total_SMC.GST <- sum(final_output_b$SMC.GST, na.rm = TRUE)
total_FUEL.GST <- sum(final_output_b$FUEL.GST, na.rm = TRUE)
invoice_test$fees_and_charges_for_the_period_hard <- sum(total_FUEL.SURCHARGE.., total_SMC.FEE)
#total_supply_for_the_period_har
invoice_test$total_supply_for_the_period_hard <- sum(invoice_test$total_supply_for_the_period_inc_fee_and_charges_easy
- invoice_test$fees_and_charges_for_the_period_hard)
invoice_test$gst_hard <- sum(final_output_minus_fees_and_charge_easy$SMC.GST + final_output_minus_fees_and_charge_easy$FUEL.GST
+ final_output_minus_fees_and_charge_easy$TAX.AMOUNT)
#invoice_test$gst_hard <-sum(total_SMC.GST, total_FUEL.GST, total_TAX.AMOUNT)
write.csv(invoice_test, file = "invoice_test.csv")
##### basic charges only
# original from Aus Post using the easy calcs
# declare a data.frame
invoice_test_basic_charge <- data.frame(
Name = c("Standard and express"),
value = c(1)
)
final_output2 <- subset(final_output_b, uplift_service %in% c( "Regular.VIC", "Express.VIC", "Regular.NSW", "Express.NSW", "EPP_fivekg", "ep_return_to_sender", "exp_eparcel_returns",
"reg_eparcel_returns", "reg_ep_call_for_return"))
#total_supply_for_the_period_inc_fee_and_charges_easy
invoice_test_basic_charge$total_supply_for_the_period_ex_fee_and_charges_easy <-sum(final_output2$AMOUNT.EXCL.TAX, na.rm = TRUE)
#total_supply_for_the_period_easy
final_output_minus_fees_and_charge_easy <- final_output2[!grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output2$DESCRIPTION, ignore.case = TRUE), ]
invoice_test_basic_charge$total_supply_for_the_period_easy <-sum(final_output_minus_fees_and_charge_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
#fees_and_charges_for_the_period_easy
final_output_just_fees_and_charges_easy <- final_output2[grepl("charge|surcharge|admin|fuel|more|unmanifest", final_output2$DESCRIPTION, ignore.case = TRUE), ]
invoice_test_basic_charge$fees_and_charges_for_the_period_easy <-sum(final_output_just_fees_and_charges_easy$AMOUNT.EXCL.TAX, na.rm = TRUE)
invoice_test_basic_charge$gst <-sum(final_output2$TAX.AMOUNT, na.rm = TRUE)
#### original from Aus Post using the hard calcs
#fees_and_charges_for_the_period_hard
total_FUEL.SURCHARGE..2 <- sum(final_output2$FUEL.SURCHARGE.., na.rm = TRUE)
total_SMC.FEE2  <- sum(final_output2$SMC.FEE, na.rm = TRUE)
total_SMC.GST2 <- sum(final_output2$SMC.GST, na.rm = TRUE)
total_FUEL.GST2 <- sum(final_output2$FUEL.GST, na.rm = TRUE)
invoice_test_basic_charge$fees_and_charges_for_the_period_hard <- sum(total_FUEL.SURCHARGE..2, total_SMC.FEE2)
#total_supply_for_the_period_hard
#invoice_test_basic_charge$total_supply_for_the_period_hard <- sum(invoice_test_basic_charge$total_supply_for_the_period_ex_fee_and_charges_easy)
#invoice_test_basic_charge$gst_hard <-sum(total_SMC.GST, total_FUEL.GST, total_TAX.AMOUNT)
invoice_test$gst_hard <- sum(final_output_minus_fees_and_charge_easy$SMC.GST + final_output_minus_fees_and_charge_easy$FUEL.GST
+ final_output_minus_fees_and_charge_easy$TAX.AMOUNT)
write.csv(invoice_test_basic_charge, file = "invoice_test_basic_charge.csv")
setwd("C:/Users/shaneb/Desktop/aus_repo/Aus_post_repo")
setwd("C:/Users/shaneb/Desktop/aus_repo/Aus_post_repo")
